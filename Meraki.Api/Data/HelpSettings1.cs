/* 
 * Meraki Dashboard API
 *
 *   *Version 0.10.0*  The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 April, 2020 > > [What's New](https://meraki.io/whats-new/)  - --  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)     
 *
 * OpenAPI spec version: 0.10.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;using System.Threading.Tasks;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Meraki.Api.Data
{
	/// <summary>
	/// Settings for describing the modifications to various Help page features. Each property in this object accepts one of     &#39;default or inherit&#39; (do not modify functionality), &#39;hide&#39; (remove the section from Dashboard), or &#39;show&#39; (always show     the section on Dashboard). Some properties in this object also accept custom HTML used to replace the section on     Dashboard; see the documentation for each property to see the allowed values.
	/// </summary>
	[DataContract]
    public partial class HelpSettings1 :  IEquatable<HelpSettings1>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="HelpSettings1" /> class.
        /// </summary>
        /// <param name="HelpTab">HelpTab.</param>
        /// <param name="GetHelpSubtab">GetHelpSubtab.</param>
        /// <param name="CommunitySubtab">CommunitySubtab.</param>
        /// <param name="CasesSubtab">CasesSubtab.</param>
        /// <param name="DataProtectionRequestsSubtab">DataProtectionRequestsSubtab.</param>
        /// <param name="GetHelpSubtabKnowledgeBaseSearch">The KB search box which appears on the Help page. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string..</param>
        /// <param name="UniversalSearchKnowledgeBaseSearch">UniversalSearchKnowledgeBaseSearch.</param>
        /// <param name="CiscoMerakiProductDocumentation">The &#39;Product Manuals&#39; section of the &#39;Help -&gt; Get Help&#39; subtab. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string..</param>
        /// <param name="SupportContactInfo">The &#39;Contact Meraki Support&#39; section of the &#39;Help -&gt; Get Help&#39; subtab. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string..</param>
        /// <param name="NewFeaturesSubtab">NewFeaturesSubtab.</param>
        /// <param name="FirewallInfoSubtab">FirewallInfoSubtab.</param>
        /// <param name="ApiDocsSubtab">ApiDocsSubtab.</param>
        /// <param name="HardwareReplacementsSubtab">HardwareReplacementsSubtab.</param>
        /// <param name="SmForums">SmForums.</param>
        public HelpSettings1(HelpTab HelpTab = default, GetHelpSubtab GetHelpSubtab = default, CommunitySubtab CommunitySubtab = default, CasesSubtab CasesSubtab = default, DataProtectionRequestsSubtab DataProtectionRequestsSubtab = default, string GetHelpSubtabKnowledgeBaseSearch = default, UniversalSearchKnowledgeBaseSearch UniversalSearchKnowledgeBaseSearch = default, string CiscoMerakiProductDocumentation = default, string SupportContactInfo = default, NewFeaturesSubtab NewFeaturesSubtab = default, FirewallInfoSubtab FirewallInfoSubtab = default, ApiDocsSubtab ApiDocsSubtab = default, HardwareReplacementsSubtab HardwareReplacementsSubtab = default, SmForums SmForums = default)
        {
            this.HelpTab = HelpTab;
            this.GetHelpSubtab = GetHelpSubtab;
            this.CommunitySubtab = CommunitySubtab;
            this.CasesSubtab = CasesSubtab;
            this.DataProtectionRequestsSubtab = DataProtectionRequestsSubtab;
            this.GetHelpSubtabKnowledgeBaseSearch = GetHelpSubtabKnowledgeBaseSearch;
            this.UniversalSearchKnowledgeBaseSearch = UniversalSearchKnowledgeBaseSearch;
            this.CiscoMerakiProductDocumentation = CiscoMerakiProductDocumentation;
            this.SupportContactInfo = SupportContactInfo;
            this.NewFeaturesSubtab = NewFeaturesSubtab;
            this.FirewallInfoSubtab = FirewallInfoSubtab;
            this.ApiDocsSubtab = ApiDocsSubtab;
            this.HardwareReplacementsSubtab = HardwareReplacementsSubtab;
            this.SmForums = SmForums;
        }

        /// <summary>
        /// Gets or Sets HelpTab
        /// </summary>
        [DataMember(Name="helpTab", EmitDefaultValue=false)]
        public HelpTab HelpTab { get; set; }
        /// <summary>
        /// Gets or Sets GetHelpSubtab
        /// </summary>
        [DataMember(Name="getHelpSubtab", EmitDefaultValue=false)]
        public GetHelpSubtab GetHelpSubtab { get; set; }
        /// <summary>
        /// Gets or Sets CommunitySubtab
        /// </summary>
        [DataMember(Name="communitySubtab", EmitDefaultValue=false)]
        public CommunitySubtab CommunitySubtab { get; set; }
        /// <summary>
        /// Gets or Sets CasesSubtab
        /// </summary>
        [DataMember(Name="casesSubtab", EmitDefaultValue=false)]
        public CasesSubtab CasesSubtab { get; set; }
        /// <summary>
        /// Gets or Sets DataProtectionRequestsSubtab
        /// </summary>
        [DataMember(Name="dataProtectionRequestsSubtab", EmitDefaultValue=false)]
        public DataProtectionRequestsSubtab DataProtectionRequestsSubtab { get; set; }
        /// <summary>
        /// The KB search box which appears on the Help page. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string.
        /// </summary>
        /// <value>The KB search box which appears on the Help page. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string.</value>
        [DataMember(Name="getHelpSubtabKnowledgeBaseSearch", EmitDefaultValue=false)]
        public string GetHelpSubtabKnowledgeBaseSearch { get; set; }
        /// <summary>
        /// Gets or Sets UniversalSearchKnowledgeBaseSearch
        /// </summary>
        [DataMember(Name="universalSearchKnowledgeBaseSearch", EmitDefaultValue=false)]
        public UniversalSearchKnowledgeBaseSearch UniversalSearchKnowledgeBaseSearch { get; set; }
        /// <summary>
        /// The &#39;Product Manuals&#39; section of the &#39;Help -&gt; Get Help&#39; subtab. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string.
        /// </summary>
        /// <value>The &#39;Product Manuals&#39; section of the &#39;Help -&gt; Get Help&#39; subtab. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string.</value>
        [DataMember(Name="ciscoMerakiProductDocumentation", EmitDefaultValue=false)]
        public string CiscoMerakiProductDocumentation { get; set; }
        /// <summary>
        /// The &#39;Contact Meraki Support&#39; section of the &#39;Help -&gt; Get Help&#39; subtab. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string.
        /// </summary>
        /// <value>The &#39;Contact Meraki Support&#39; section of the &#39;Help -&gt; Get Help&#39; subtab. Can be one of &#39;default or inherit&#39;, &#39;hide&#39;, &#39;show&#39;, or a replacement custom HTML string.</value>
        [DataMember(Name="supportContactInfo", EmitDefaultValue=false)]
        public string SupportContactInfo { get; set; }
        /// <summary>
        /// Gets or Sets NewFeaturesSubtab
        /// </summary>
        [DataMember(Name="newFeaturesSubtab", EmitDefaultValue=false)]
        public NewFeaturesSubtab NewFeaturesSubtab { get; set; }
        /// <summary>
        /// Gets or Sets FirewallInfoSubtab
        /// </summary>
        [DataMember(Name="firewallInfoSubtab", EmitDefaultValue=false)]
        public FirewallInfoSubtab FirewallInfoSubtab { get; set; }
        /// <summary>
        /// Gets or Sets ApiDocsSubtab
        /// </summary>
        [DataMember(Name="apiDocsSubtab", EmitDefaultValue=false)]
        public ApiDocsSubtab ApiDocsSubtab { get; set; }
        /// <summary>
        /// Gets or Sets HardwareReplacementsSubtab
        /// </summary>
        [DataMember(Name="hardwareReplacementsSubtab", EmitDefaultValue=false)]
        public HardwareReplacementsSubtab HardwareReplacementsSubtab { get; set; }
        /// <summary>
        /// Gets or Sets SmForums
        /// </summary>
        [DataMember(Name="smForums", EmitDefaultValue=false)]
        public SmForums SmForums { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class HelpSettings1 {\n");
            sb.Append("  HelpTab: ").Append(HelpTab).Append("\n");
            sb.Append("  GetHelpSubtab: ").Append(GetHelpSubtab).Append("\n");
            sb.Append("  CommunitySubtab: ").Append(CommunitySubtab).Append("\n");
            sb.Append("  CasesSubtab: ").Append(CasesSubtab).Append("\n");
            sb.Append("  DataProtectionRequestsSubtab: ").Append(DataProtectionRequestsSubtab).Append("\n");
            sb.Append("  GetHelpSubtabKnowledgeBaseSearch: ").Append(GetHelpSubtabKnowledgeBaseSearch).Append("\n");
            sb.Append("  UniversalSearchKnowledgeBaseSearch: ").Append(UniversalSearchKnowledgeBaseSearch).Append("\n");
            sb.Append("  CiscoMerakiProductDocumentation: ").Append(CiscoMerakiProductDocumentation).Append("\n");
            sb.Append("  SupportContactInfo: ").Append(SupportContactInfo).Append("\n");
            sb.Append("  NewFeaturesSubtab: ").Append(NewFeaturesSubtab).Append("\n");
            sb.Append("  FirewallInfoSubtab: ").Append(FirewallInfoSubtab).Append("\n");
            sb.Append("  ApiDocsSubtab: ").Append(ApiDocsSubtab).Append("\n");
            sb.Append("  HardwareReplacementsSubtab: ").Append(HardwareReplacementsSubtab).Append("\n");
            sb.Append("  SmForums: ").Append(SmForums).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return Equals(obj as HelpSettings1);
        }

        /// <summary>
        /// Returns true if HelpSettings1 instances are equal
        /// </summary>
        /// <param name="other">Instance of HelpSettings1 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(HelpSettings1 other)
        {
			// credit: http://stackoverflow.com/a/10454552/677735
			return other == null
					? false
					: (
						  HelpTab == other.HelpTab ||
						  (HelpTab != null &&
						  HelpTab.Equals(other.HelpTab))
					 ) &&
					 (
						  GetHelpSubtab == other.GetHelpSubtab ||
						  (GetHelpSubtab != null &&
						  GetHelpSubtab.Equals(other.GetHelpSubtab))
					 ) &&
					 (
						  CommunitySubtab == other.CommunitySubtab ||
						  (CommunitySubtab != null &&
						  CommunitySubtab.Equals(other.CommunitySubtab))
					 ) &&
					 (
						  CasesSubtab == other.CasesSubtab ||
						  (CasesSubtab != null &&
						  CasesSubtab.Equals(other.CasesSubtab))
					 ) &&
					 (
						  DataProtectionRequestsSubtab == other.DataProtectionRequestsSubtab ||
						  (DataProtectionRequestsSubtab != null &&
						  DataProtectionRequestsSubtab.Equals(other.DataProtectionRequestsSubtab))
					 ) &&
					 (
						  GetHelpSubtabKnowledgeBaseSearch == other.GetHelpSubtabKnowledgeBaseSearch ||
						  (GetHelpSubtabKnowledgeBaseSearch != null &&
						  GetHelpSubtabKnowledgeBaseSearch.Equals(other.GetHelpSubtabKnowledgeBaseSearch))
					 ) &&
					 (
						  UniversalSearchKnowledgeBaseSearch == other.UniversalSearchKnowledgeBaseSearch ||
						  (UniversalSearchKnowledgeBaseSearch != null &&
						  UniversalSearchKnowledgeBaseSearch.Equals(other.UniversalSearchKnowledgeBaseSearch))
					 ) &&
					 (
						  CiscoMerakiProductDocumentation == other.CiscoMerakiProductDocumentation ||
						  (CiscoMerakiProductDocumentation != null &&
						  CiscoMerakiProductDocumentation.Equals(other.CiscoMerakiProductDocumentation))
					 ) &&
					 (
						  SupportContactInfo == other.SupportContactInfo ||
						  (SupportContactInfo != null &&
						  SupportContactInfo.Equals(other.SupportContactInfo))
					 ) &&
					 (
						  NewFeaturesSubtab == other.NewFeaturesSubtab ||
						  (NewFeaturesSubtab != null &&
						  NewFeaturesSubtab.Equals(other.NewFeaturesSubtab))
					 ) &&
					 (
						  FirewallInfoSubtab == other.FirewallInfoSubtab ||
						  (FirewallInfoSubtab != null &&
						  FirewallInfoSubtab.Equals(other.FirewallInfoSubtab))
					 ) &&
					 (
						  ApiDocsSubtab == other.ApiDocsSubtab ||
						  (ApiDocsSubtab != null &&
						  ApiDocsSubtab.Equals(other.ApiDocsSubtab))
					 ) &&
					 (
						  HardwareReplacementsSubtab == other.HardwareReplacementsSubtab ||
						  (HardwareReplacementsSubtab != null &&
						  HardwareReplacementsSubtab.Equals(other.HardwareReplacementsSubtab))
					 ) &&
					 (
						  SmForums == other.SmForums ||
						  (SmForums != null &&
						  SmForums.Equals(other.SmForums))
					 );
		}

		/// <summary>
		/// Gets the hash code
		/// </summary>
		/// <returns>Hash code</returns>
		public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (HelpTab != null)
				{
					hash = (hash * 59) + HelpTab.GetHashCode();
				}

				if (GetHelpSubtab != null)
				{
					hash = (hash * 59) + GetHelpSubtab.GetHashCode();
				}

				if (CommunitySubtab != null)
				{
					hash = (hash * 59) + CommunitySubtab.GetHashCode();
				}

				if (CasesSubtab != null)
				{
					hash = (hash * 59) + CasesSubtab.GetHashCode();
				}

				if (DataProtectionRequestsSubtab != null)
				{
					hash = (hash * 59) + DataProtectionRequestsSubtab.GetHashCode();
				}

				if (GetHelpSubtabKnowledgeBaseSearch != null)
				{
					hash = (hash * 59) + GetHelpSubtabKnowledgeBaseSearch.GetHashCode();
				}

				if (UniversalSearchKnowledgeBaseSearch != null)
				{
					hash = (hash * 59) + UniversalSearchKnowledgeBaseSearch.GetHashCode();
				}

				if (CiscoMerakiProductDocumentation != null)
				{
					hash = (hash * 59) + CiscoMerakiProductDocumentation.GetHashCode();
				}

				if (SupportContactInfo != null)
				{
					hash = (hash * 59) + SupportContactInfo.GetHashCode();
				}

				if (NewFeaturesSubtab != null)
				{
					hash = (hash * 59) + NewFeaturesSubtab.GetHashCode();
				}

				if (FirewallInfoSubtab != null)
				{
					hash = (hash * 59) + FirewallInfoSubtab.GetHashCode();
				}

				if (ApiDocsSubtab != null)
				{
					hash = (hash * 59) + ApiDocsSubtab.GetHashCode();
				}

				if (HardwareReplacementsSubtab != null)
				{
					hash = (hash * 59) + HardwareReplacementsSubtab.GetHashCode();
				}

				if (SmForums != null)
				{
					hash = (hash * 59) + SmForums.GetHashCode();
				}

				return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
