/* 
 * Meraki Dashboard API
 *
 *   *Version 0.10.0*  The Cisco Meraki Dashboard API is a modern REST API based on the OpenAPI specification.  > Date: 01 April, 2020 > > [What's New](https://meraki.io/whats-new/)  - --  [API Documentation](https://meraki.io/api)  [Community Support](https://meraki.io/community)  [Meraki Homepage](https://www.meraki.com)     
 *
 * OpenAPI spec version: 0.10.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;using System.Threading.Tasks;
using System.Text;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;

namespace Meraki.Api.Data
{
	/// <summary>
	/// The content filtering settings for your group policy
	/// </summary>
	[DataContract]
    public partial class ContentFiltering :  IEquatable<ContentFiltering>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ContentFiltering" /> class.
        /// </summary>
        /// <param name="AllowedUrlPatterns">AllowedUrlPatterns.</param>
        /// <param name="BlockedUrlPatterns">BlockedUrlPatterns.</param>
        /// <param name="BlockedUrlCategories">BlockedUrlCategories.</param>
        public ContentFiltering(AllowedUrlPatterns AllowedUrlPatterns = default, BlockedUrlPatterns BlockedUrlPatterns = default, BlockedUrlCategories BlockedUrlCategories = default)
        {
            this.AllowedUrlPatterns = AllowedUrlPatterns;
            this.BlockedUrlPatterns = BlockedUrlPatterns;
            this.BlockedUrlCategories = BlockedUrlCategories;
        }

        /// <summary>
        /// Gets or Sets AllowedUrlPatterns
        /// </summary>
        [DataMember(Name="allowedUrlPatterns", EmitDefaultValue=false)]
        public AllowedUrlPatterns AllowedUrlPatterns { get; set; }
        /// <summary>
        /// Gets or Sets BlockedUrlPatterns
        /// </summary>
        [DataMember(Name="blockedUrlPatterns", EmitDefaultValue=false)]
        public BlockedUrlPatterns BlockedUrlPatterns { get; set; }
        /// <summary>
        /// Gets or Sets BlockedUrlCategories
        /// </summary>
        [DataMember(Name="blockedUrlCategories", EmitDefaultValue=false)]
        public BlockedUrlCategories BlockedUrlCategories { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ContentFiltering {\n");
            sb.Append("  AllowedUrlPatterns: ").Append(AllowedUrlPatterns).Append("\n");
            sb.Append("  BlockedUrlPatterns: ").Append(BlockedUrlPatterns).Append("\n");
            sb.Append("  BlockedUrlCategories: ").Append(BlockedUrlCategories).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return Equals(obj as ContentFiltering);
        }

        /// <summary>
        /// Returns true if ContentFiltering instances are equal
        /// </summary>
        /// <param name="other">Instance of ContentFiltering to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ContentFiltering other)
        {
			// credit: http://stackoverflow.com/a/10454552/677735
			return other == null
					? false
					: (
						  AllowedUrlPatterns == other.AllowedUrlPatterns ||
						  AllowedUrlPatterns != null &&
						  AllowedUrlPatterns.Equals(other.AllowedUrlPatterns)
					 ) &&
					 (
						  BlockedUrlPatterns == other.BlockedUrlPatterns ||
						  BlockedUrlPatterns != null &&
						  BlockedUrlPatterns.Equals(other.BlockedUrlPatterns)
					 ) &&
					 (
						  BlockedUrlCategories == other.BlockedUrlCategories ||
						  BlockedUrlCategories != null &&
						  BlockedUrlCategories.Equals(other.BlockedUrlCategories)
					 );
		}

		/// <summary>
		/// Gets the hash code
		/// </summary>
		/// <returns>Hash code</returns>
		public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (AllowedUrlPatterns != null)
                    hash = hash * 59 + AllowedUrlPatterns.GetHashCode();
                if (BlockedUrlPatterns != null)
                    hash = hash * 59 + BlockedUrlPatterns.GetHashCode();
                if (BlockedUrlCategories != null)
                    hash = hash * 59 + BlockedUrlCategories.GetHashCode();
                return hash;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
